{% macro prepare_resources(reference_fasta=none, gene_model=none) %}

{% set temp_dir %}temp/pipeline_resources{% endset %}

{% if reference_fasta is not none %}
- name: create_samtools_resources_for_{{ reference }}
  input: {{ reference_fasta }}
  output:
    - {{ reference_fasta }}.fai
    - {{ reference_fasta }}.dict
  cpus: 4
  mem: 16G
  walltime: "4:00:00"
  container: {{ constants.tools.samtools.container }}
  cmd: |
    set -uev

    samtools faidx {{ reference_fasta }}

    samtools dict \
      -o {{ reference_fasta }}.dict \
      {{ reference_fasta }}

- name: create_chunking_intervals_for_{{ reference }}
  input: {{ reference_fasta }}
  output:
    - {{ reference_fasta }}.fai
    - {{ reference_fasta }}.dict
  cpus: 4
  mem: 16G
  walltime: "4:00:00"
  container: {{ constants.tools.gatk.container }}
  cmd: |
    set -uev

    mkdir -p {{ temp_dir }}/calling_intervals

    gatk ScatterIntervalsByNs \
      --REFERENCE {{ reference_fasta }} \
      --OUTPUT_TYPE ACGT \
      --OUTPUT {{ temp_dir }}/calling_intervals/{{ reference_fasta }}.ACGT.interval_list

    gatk IntervalListTools \
      --SCATTER_COUNT {{ num_chunks }} \
      --SUBDIVISION_MODE BALANCING_WITHOUT_INTERVAL_SUBDIVISION_WITH_OVERFLOW \
      --PADDING 100 \
      --UNIQUE true \
      --SORT true \
      --INPUT {{ temp_dir }}/calling_intervals/{{ reference_fasta }}.ACGT.interval_list \
      --OUTPUT {{ temp_dir }}/calling_intervals/gatk_chunk_intervals

    for interval in {{ temp_dir }}/calling_intervals/gatk_chunk_intervals/temp_00*_of_{{ num_chunks }}/scattered.interval_list ; do
      chunk=$(echo "$interval" | grep -oP '[0-9]{4}' | sed 's/^0\+//')
      grep -v '^@' $interval | awk '{ OFS="\t" ; print $1,$2-1,$3 }' > {{ temp_dir }}/calling_intervals/calling_interval_${chunk}.bed
    done

{% endif %}

{% if gene_model is not none %}
- name: create_gene_model_resources_for_input_reference
  input: {{ gene_model }}
  output:
    - {{ gene_model }}.gene.bed
    - {{ gene_model }}.exon.bed
    - {{ gene_model }}.cds.bed
  cpus: 4
  mem: 16G
  walltime: "4:00:00"
  container: {{ constants.tools.bedtools.container }}
  cmd: |
    set -uev

    awk -F '[\t"]' '$1 !~ /^#/ { if ($3 == "gene") { OFS = "\t" ; print $1, $4, $5, $10 }}' {{ gene_model }} |\
      sort -k1,1V -k2,2n -k3,3n > {{ gene_model }}.gene.bed

    awk -F '[\t"]' '$1 !~ /^#/ { if ($3 == "exon") { OFS = "\t" ; print $1, $4, $5, $10 }}' {{ gene_model }} |\
      sort -k1,1V -k2,2n -k3,3n > {{ gene_model }}.exon.bed

    awk -F '[\t"]' '$1 !~ /^#/ { if ($3 == "CDS" && $4 < $5) { OFS = "\t" ; print $1, $4, $5, "CDS" }}' {{ gene_model }} |\
      awk '!dup[$0]++' | sort -k1,1V -k2,2n -k3,3n | bedtools merge -i - > {{ gene_model }}.cds.bed

{% endif %}

{% endmacro %}
