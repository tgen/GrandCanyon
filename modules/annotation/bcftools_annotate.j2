{% macro bcftools_annotate(sample_or_pair, temp_dir, input_vcf, taskPrefix, variant_caller, output_vcf, aligner='minimap2') %}

{% set output_bcf %}{{ temp_dir }}/{{ sample_or_pair.name }}.{{ aligner }}.{{ variant_caller }}.db.bcf{% endset %}

- name: bcftools_annotate_{{ variant_caller }}_{{ sample_or_pair.name }}_{{ aligner }}
  tags: [{{ sample_or_pair.gltype }}, annotate_vcfs, {{ variant_caller }}, {{ sample_or_pair.name }}]
  input: {{ input_vcf }}
  output:
    - {{ output_vcf }}
    - {{ output_vcf }}.tbi
    {% if tasks[taskPrefix+"_variant_calling_annotate_vcfs_bcftools_dbsnp"]|default(false) %}
    - {{ constants.grandcanyon.dbsnp }}
    {% endif %}
    {% if tasks[taskPrefix+"_variant_calling_annotate_vcfs_bcftools_gnomad"]|default(false) %}
    - {{ constants.grandcanyon.gnomad }}
    {% endif %}
    {% if tasks[taskPrefix+"_"+analysis_type+"_annotate_vcfs_bcftools_clinvar"]|default(false) %}
    - {{ constants.grandcanyon.clinvar }}
    {% endif %}
  walltime: "8:00:00"
  cpus: 4
  mem: 4G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.bcftools.container }}
  cmd: |
    set -eu
    set -o pipefail

    mkdir -p "{{ temp_dir }}"

    {#
    # we need to convert whatever vcf type we are given into a bcf (bcftools loves bcfs)
    # also create a temp bcf that we will use for all annotation runs
    #}
    bcftools view \
      --threads 4 \
      --output-type b \
      --output-file "{{ output_bcf }}" \
      "{{ input_vcf }}"

    bcftools index --threads 4 --force "{{ output_bcf }}"

    {% if tasks[taskPrefix+"_variant_calling_annotate_vcfs_bcftools_dbsnp"]|default(false) %}
    {# annotate with dbsnp #}
    bcftools annotate \
      --threads 4 \
      --annotations "{{ constants.grandcanyon.dbsnp }}" \
      --mark-sites DB \
      --columns ID \
      --output-type b \
      --output "{{ temp_dir }}/tempout.bcf" \
      "{{ output_bcf }}"

    {# move tempout to tempin for next step #}
    mv "{{ temp_dir }}/tempout.bcf" "{{ output_bcf }}"

    bcftools index --threads 4 --force "{{ output_bcf }}"
    {% endif %}

    {% if tasks[taskPrefix+"_variant_calling_annotate_vcfs_bcftools_gnomad"]|default(false) %}
    {# annotate with gnomad exome #}
    bcftools annotate \
      --threads 4 \
      --annotations "{{ constants.grandcanyon.gnomad }}" \
      --mark-sites GNOMAD \
      --columns GNOMAD_AC:=AC,GNOMAD_AN:=AN,GNOMAD_AF:=AF,GNOMAD_n_alt_alleles:=n_alt_alleles \
      --output-type b \
      --output "{{ temp_dir }}/tempout.bcf" \
      "{{ output_bcf }}"

    {# move tempout to tempin for next step #}
    mv "{{ temp_dir }}/tempout.bcf" "{{ output_bcf }}"

    bcftools index --threads 4 --force "{{ output_bcf }}"
    {% endif %}

    {% if tasks[taskPrefix+"_"+analysis_type+"_annotate_vcfs_bcftools_clinvar"]|default(false) %}
    {# annotate with clinvar #}
    bcftools annotate \
      --threads 4 \
      --annotations "{{ constants.grandcanyon.clinvar }}" \
      --mark-sites CLINVAR \
      --columns CLNDN,CLNDNINCL,CLNDISDB,CLNDISDBINCL,CLNHGVS,CLNREVSTAT,CLNSIG,CLNSIGCONF,CLNSIGINCL,CLNVC,CLNVCSO,CLNVI,CLNORIGIN:=ORIGIN \
      --output-type b \
      --output "{{ temp_dir }}/tempout.bcf" \
      "{{ output_bcf }}"

    {# move tempout to tempin for next step #}
    mv "{{ temp_dir }}/tempout.bcf" "{{ output_bcf }}"

    bcftools index --threads 4 --force "{{ output_bcf }}"
    {% endif %}

    {# convert back to vcf.gz for the average users #}
    bcftools view \
    --threads 4 \
    --output-type z \
    --output-file "{{ output_vcf }}" \
    "{{ output_bcf }}"

    bcftools index --threads 4 --tbi --force "{{ output_vcf }}"

{% endmacro -%}

