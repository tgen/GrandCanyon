{% from 'modules/annotation/main.j2' import annotate_vcfs with context %}
{% from 'modules/variant_calling/whatshap.j2' import whatshap_haplotag with context %}

{%- macro deepvariant(sample, taskPrefix='Genome') %}

{%- set bam %}{{ sample.gltype }}/alignment/minimap2/{{ sample.name }}/{{ sample.name }}.minimap2.cram{% endset %}
{%- set temp_dir %}temp/{{ sample.gltype }}/constitutional_variant_calls/deepvariant/{{ sample.name }}_minimap2{% endset %}
{%- set results_dir %}{{ sample.gltype }}/constitutional_variant_calls/deepvariant/{{ sample.name }}_minimap2{% endset %}
{%- set all_vcf %}{{ results_dir }}/{{ sample.name }}.minimap2.deepvariant.all.vcf.gz{% endset %}
{%- set all_gvcf %}{{ results_dir }}/{{ sample.name }}.minimap2.deepvariant.all.g.vcf.gz{% endset %}
{%- set pass_vcf %}{{ results_dir }}/{{ sample.name }}.minimap2.deepvariant.pass.vcf.gz{% endset %}

{%- set nshards=40 %}
{% for i in range(nshards) %}

{% set iteration = ('00000' + i|string)|reverse|truncate(5, True, '', 0)|reverse %}
{% set stop = ('00000' + nshards|string)|reverse|truncate(5, True, '', 0)|reverse %}

- name: deepvariant_make_examples_{{ sample.name }}_minimap2_shard{{ i }}
  tags: [{{ sample.gltype}}, constitutional, snp_indel_caller, deepvariant, {{ sample.name }}]
  input:
    - {{ bam }}
    - {{ bam }}.bai
    - {{ constants.grandcanyon.reference_fasta }}
  output:
    - {{ temp_dir }}/{{ sample.name }}.ex.tfrecord-{{ iteration }}-of-{{ stop }}.gz
    - {{ temp_dir }}/{{ sample.name }}.gvcf.tfrecord-{{ iteration }}-of-{{ stop }}.gz
  cpus: 1
  mem: 4G
  walltime: "6:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.deepvariant.container }}
  cmd: |
    set -eu
    set -o pipefail

    PROJECT_ROOT=$PWD

    mkdir -p {{ temp_dir }}

    cd {{ temp_dir }}

    make_examples \
      --norealign_reads \
      --pileup_image_width 199 \
      --track_ref_reads \
      --phase_reads \
      --partition_size=25000 \
      --max_reads_per_partition=600 \
      --alt_aligned_pileup=diff_channels \
      --add_hp_channel \
      --sort_by_haplotypes \
      --parse_sam_aux_fields \
      {% if sample.rgpl in ('ONT') %}
      --min_mapping_quality=5 \
      --vsc_min_fraction_indels 0.12 \
      --vsc_min_fraction_snps 0.08 \
      {% elif sample.rgpl in ('PACBIO') %}
      --min_mapping_quality=1 \
      --vsc_min_fraction_indels 0.12 \
      {% endif %}
      --mode calling \
      --task {{ i }} \
      --ref "{{ constants.grandcanyon.reference_fasta }}" \
      --reads "${PROJECT_ROOT}/{{ bam }}" \
      --examples "${PROJECT_ROOT}/{{ temp_dir }}/{{ sample.name }}.ex.tfrecord@{{ nshards }}.gz" \
      --gvcf "${PROJECT_ROOT}/{{ temp_dir }}/{{ sample.name }}.gvcf.tfrecord@{{ nshards }}.gz"

{% endfor %}

- name: deepvariant_call_variants_{{ sample.name }}_minimap2
  tags: [{{ sample.gltype}}, constitutional, snp_indel_caller, deepvariant, {{ sample.name }}]
  reset: predecessors
  input:
    {% for i in range(nshards) %}
    {% set iteration = ('00000' + i|string)|reverse|truncate(5, True, '', 0)|reverse %}
    {% set stop = ('00000' + nshards|string)|reverse|truncate(5, True, '', 0)|reverse %}
    - {{ temp_dir }}/{{ sample.name }}.ex.tfrecord-{{ iteration }}-of-{{ stop }}.gz
    - {{ temp_dir }}/{{ sample.name }}.gvcf.tfrecord-{{ iteration }}-of-{{ stop }}.gz
    {% endfor %}
  output: {{ temp_dir }}/{{ sample.name }}.cvo.tfrecord.gz
  cpus: 8
  mem: 40G
  walltime: "24:00:00"
  queue_preset: "DEEPVARIANT"
  container: {{ constants.tools.deepvariant.container }}
  cmd: |
    set -eu
    set -o pipefail

    PROJECT_ROOT=$PWD

    cd {{ temp_dir }}

    call_variants \
      {% if sample.rgpl in ('ONT') %}
      --checkpoint /opt/models/ont_r104 \
      {% elif sample.rgpl in ('PACBIO') %}
      --checkpoint /opt/models/pacbio \
      {% endif %}
      --examples "{{ sample.name }}.ex.tfrecord@{{ nshards }}.gz" \
      --outfile "{{ sample.name }}.cvo.tfrecord.gz"


- name: deepvariant_postprocess_variants_{{ sample.name }}_minimap2
  tags: [{{ sample.gltype}}, constitutional, snp_indel_caller, deepvariant, {{ sample.name }}]
  reset: predecessors
  input:
    - {{ temp_dir }}/{{ sample.name }}.cvo.tfrecord.gz
    - {{ constants.grandcanyon.reference_fasta }}
  output:
    - {{ all_vcf }}
    - {{ all_gvcf }}
  cpus: 20
  mem: 160G
  walltime: "24:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.deepvariant.container }}
  cmd: |
    set -eu
    set -o pipefail

    PROJECT_ROOT=$PWD

    mkdir -p {{ results_dir }}

    cd {{ temp_dir }}

    postprocess_variants \
      --cpus 20 \
      --ref "{{ constants.grandcanyon.reference_fasta }}" \
      --infile "{{ sample.name }}.cvo.tfrecord.gz" \
      --outfile "${PROJECT_ROOT}/{{ all_vcf }}" \
      --novcf_stats_report \
      --nonvariant_site_tfrecord_path "${PROJECT_ROOT}/{{ temp_dir }}/{{ sample.name }}.gvcf.tfrecord@{{ nshards }}.gz" \
      --gvcf_outfile "${PROJECT_ROOT}/{{ results_dir }}/{{ sample.name }}.minimap2.deepvariant.all.g.vcf.gz"


- name: deepvariant_filter_variants_{{ sample.name }}_minimap2
  tags: [{{ sample.gltype}}, constitutional, snp_indel_caller, deepvariant, {{ sample.name }}]
  input:
    - {{ all_vcf }}
    {% if sample.gltype == 'exome' %}
    - {{ sample.capture_kit.extended_bed }}
    {% endif %}
  output:
    - {{ all_vcf }}.tbi
    - {{ pass_vcf }}
    - {{ pass_vcf }}.tbi
  cpus: 1
  mem: 4G
  walltime: "24:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.bcftools.container }}
  cmd: |
    set -eu
    set -o pipefail

    bcftools index --tbi --force "{{ all_vcf }}"

    {# Then filter out the PASS variants to a separate file #}
    bcftools filter \
      --output-type z \
      --include 'FILTER == "PASS"' \
      "{{ all_vcf }}" \
      > "{{ pass_vcf }}"

    bcftools index --tbi --force "{{ pass_vcf }}"


{% set bam %}temp/{{ sample.gltype }}/alignment/minimap2/{{ sample.name }}/{{ sample.name }}.minimap2.bam{% endset %}
{% set output_prefix %}{{ sample.name }}.minimap2.deepvariant.margin{% endset %}

{#
  to haplotag ONT data use allParams.haplotag.ont-r94g507.json
  to haplotag PacBio HiFi data use allParams.haplotag.pb-hifi.json
  to phase a VCF generated using ONT data use allParams.phase_vcf.ont.json
  to phase a VCF generated using PacBio-HiFi data use: allParams.phase_vcf.pb-hifi.json
#}

- name: deepvariant_margin_{{ sample.name }}_minimap2
  input:
    - {{ pass_vcf }}
    - {{ bam }}
    - {{ bam }}.bai
    - {{ constants.grandcanyon.reference_fasta }}
  output:
    - {{ results_dir }}/{{ output_prefix }}.chunks.csv
    - {{ results_dir }}/{{ output_prefix }}.phased.vcf
    - {{ results_dir }}/{{ output_prefix }}.phaseset.bed
    {% if tasks.margin_phase_keep_phased_bam | default(true) %}
    - {{ temp_dir }}/{{ output_prefix }}.haplotagged.bam
    {% endif %}
  cpus: 8
  mem: 32G
  walltime: "24:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.margin.container }}
  cmd: |
    set -eu
    set -o pipefail

    mkdir -p {{ temp_dir }}
    mkdir -p {{ results_dir }}

    margin phase \
      {{ bam }} \
      {{ constants.grandcanyon.reference_fasta }} \
      {{ pass_vcf }} \
      {% if sample.rgpl == 'ONT' %}
      /opt/margin/params/phase/allParams.phase_vcf.ont.json \
      {% elif sample.rgpl == 'PACBIO' %}
      /opt/margin/params/phase/allParams.phase_vcf.pb-hifi.json \
      {% endif %}
      -t 8 \
      {% if not tasks.margin_phase_keep_phased_bam | default(true) %}
      --skipHaplotypeBAM \
      {% endif %}
      -o {{ temp_dir }}/{{ output_prefix }}

    mv {{ temp_dir }}/{{ output_prefix }}.chunks.csv {{ results_dir }}/
    mv {{ temp_dir }}/{{ output_prefix }}.phased.vcf {{ results_dir }}/
    mv {{ temp_dir }}/{{ output_prefix }}.phaseset.bed {{ results_dir }}/


{% if tasks.margin_phase_keep_phased_bam | default(true) %}
- name: deepvariant_margin_samtools_compress_{{ sample.name }}_minimap2
  input:
    - {{ constants.grandcanyon.reference_fasta }}
    - {{ temp_dir }}/{{ output_prefix }}.haplotagged.bam
  output:
    - {{ results_dir }}/{{ output_prefix }}.haplotagged.cram
    - {{ results_dir }}/{{ output_prefix }}.haplotagged.cram.crai
  walltime: "8:00:00"
  cpus: 8
  mem: 8G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.samtools.container }}
  cmd: |
    set -eu
    set -o pipefail

    {# Convert to compressed VCF #}
    samtools view \
      -@ 8 \
      --reference {{ constants.grandcanyon.reference_fasta }} \
      --no-PG \
      -o {{ results_dir }}/{{ output_prefix }}.haplotagged.cram \
      --write-index \
      {{ temp_dir }}/{{ output_prefix }}.haplotagged.bam

{% endif %}

- name: margin_deepvariant_bcftools_compress_{{ sample.name }}_minimap2
  input:
    - {{ results_dir }}/{{ output_prefix }}.phased.vcf
  output:
    - {{ results_dir }}/{{ output_prefix }}.phased.vcf.gz
    - {{ results_dir }}/{{ output_prefix }}.phased.vcf.gz.tbi
  walltime: "4:00:00"
  cpus: 4
  mem: 8G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.bcftools.container }}
  cmd: |
    set -eu
    set -o pipefail

    {# Convert to compressed VCF #}
    bcftools view \
        --threads 4 \
        --output-type z \
        --output-file {{ results_dir }}/{{ output_prefix }}.phased.vcf.gz \
        --write-index \
        {{ results_dir }}/{{ output_prefix }}.phased.vcf

    rm {{ results_dir }}/{{ output_prefix }}.phased.vcf

{% set margin_phased_vcf %}{{ results_dir }}/{{ sample.name }}.minimap2.deepvariant.margin.phased.vcf.gz{% endset %}
{{- annotate_vcfs(sample, temp_dir, results_dir, margin_phased_vcf, taskPrefix, 'minimap2', 'deepvariant') }}
{% set output_prefix %}{{ sample.name }}.minimap2.deepvariant.whatshap{% endset %}
{{- whatshap_haplotag(sample, margin_phased_vcf, bam, temp_dir, results_dir, output_prefix) }}

{% endmacro %}
