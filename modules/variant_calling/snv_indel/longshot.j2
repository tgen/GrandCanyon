{% macro longshot(sample, aligner) %}

{%- set bam %}temp/{{ sample.gltype }}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam{% endset %}
{%- set temp_dir %}temp/{{ sample.gltype }}/constitutional_variant_calls/longshot/{{ sample.name }}_{{ aligner }}{% endset %}
{%- set results_dir %}{{ sample.gltype }}/constitutional_variant_calls/longshot/{{ sample.name }}_{{ aligner }}{% endset %}
{%- set temp_vcf %}{{ temp_dir }}/{{ sample.name }}.{{ aligner }}.longshot.all.vcf{% endset %}
{%- set all_vcf %}{{ results_dir }}/{{ sample.name }}.{{ aligner }}.longshot.all.vcf.gz{% endset %}
{%- set pass_vcf %}{{ results_dir }}/{{ sample.name }}.{{ aligner }}.longshot.pass.vcf.gz{% endset %}

- name: longshot_{{ sample.name }}_{{ aligner }}
  input:
    - {{ bam }}
    - {{ bam }}.bai
    - {{ constants.grandcanyon[reference].reference_fasta }}
  output:
    - {{ temp_vcf }}
  cpus: 8
  mem: 64G
  walltime: "24:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.longshot.container }}
  cmd: |
    set -eu

    mkdir -p {{ temp_dir }}

    longshot \
      --bam {{ bam }} \
      --sample_id {{ sample.rgsm }} \
      --ref {{ constants.grandcanyon[reference].reference_fasta }} \
      --no_haps \
      --force_overwrite \
      --out {{ temp_vcf }}

- name: longshot_filter_variants_{{ sample.name }}_{{ aligner }}
  tags: [{{ sample.gltype}}, constitutional, snp_indel_caller, longshot, {{ sample.name }}]
  input:
    - {{ temp_vcf }}
  output:
    - {{ all_vcf }}
    - {{ all_vcf }}.tbi
    - {{ pass_vcf }}
    - {{ pass_vcf }}.tbi
  cpus: 1
  mem: 4G
  walltime: "4:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.bcftools.container }}
  cmd: |
    set -eu
    set -o pipefail

    mkdir -p {{ results_dir }}

    bcftools view \
      --output-type z \
      --output {{ all_vcf }} \
      --write-index \
      {{ temp_vcf }}

    bcftools view \
      --include 'FILTER == "PASS"' \
      --output-type z \
      --output {{ pass_vcf }} \
      --write-index \
      {{ all_vcf }}

{% endmacro %}
