{% macro clairs(pair, aligner) %}

{%- set normal_bam %}temp/{{ pair.gltype }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam{% endset %}
{%- set tumor_bam %}temp/{{ pair.gltype }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam{% endset %}
{%- set temp_dir %}temp/{{ pair.gltype }}/somatic_variant_calls/clairs/{{ pair.name }}_{{ aligner }}{% endset %}
{%- set results_dir %}{{ pair.gltype }}/somatic_variant_calls/clairs/{{ pair.name }}_{{ aligner }}{% endset %}
{%- set all_vcf %}{{ results_dir }}/{{ pair.name }}.{{ aligner }}.clairs.all.vcf.gz{% endset %}
{%- set pass_vcf %}{{ results_dir }}/{{ pair.name }}.{{ aligner }}.clairs.pass.vcf.gz{% endset %}

- name: clairs_{{ pair.name }}_{{ aligner }}
  reset: predecessors
  input:
    - {{ tumor_bam }}
    - {{ tumor_bam }}.bai
    - {{ normal_bam }}
    - {{ normal_bam }}.bai
    - {{ constants.grandcanyon[reference].reference_fasta }}
  output:
    - {{ all_vcf }}
  cpus: 8
  mem: 64G
  walltime: "24:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.clairs.container }}
  cmd: |
    set -eu
    set -o pipefail

    rm -r {{ temp_dir }} || true
    mkdir -p {{ temp_dir }}
    mkdir -p {{ results_dir }}

    /opt/bin/run_clairs \
      --tumor_bam_fn {{ tumor_bam }} \
      --normal_bam_fn {{ normal_bam }} \
      --ref_fn {{ constants.grandcanyon[reference].reference_fasta }} \
      --threads 8 \
      {% if pair.tumor.rgpl == "ONT" %}
      --platform "ont_r10_dorado_sup_4khz" \
      {% elif pair.tumor.rgpl == "PACBIO" %}
      --platform "hifi_revio" \
      {% else %}
      --platform "ilmn" \
      {% endif %}
      --output_dir {{ temp_dir }}

    mv {{ temp_dir }}/output.vcf.gz {{ all_vcf }}
    mv {{ temp_dir }}/output.vcf.gz.tbi {{ all_vcf }}.tbi


- name: clairs_filter_variants_{{ pair.name }}_{{ aligner }}
  input:
    - {{ all_vcf }}
  output:
    - {{ pass_vcf }}
    - {{ pass_vcf }}.tbi
  cpus: 1
  mem: 4G
  walltime: "4:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.bcftools.container }}
  cmd: |
    set -eu
    set -o pipefail

    bcftools view \
      --include 'FILTER == "PASS"' \
      --output-type z \
      --output {{ pass_vcf }} \
      --write-index \
      {{ all_vcf }}

{% from 'modules/annotation/main.j2' import annotate_vcfs with context %}
{{- annotate_vcfs(pair, temp_dir, results_dir, pass_vcf, aligner, 'clairs') }}

{% endmacro %}
