{% macro lancet2(pair, aligner='bwa') %}

{%- set normal_bam %}temp/{{ pair.gltype }}/alignment/{{ aligner }}/{{ pair.normal.name }}/{{ pair.normal.name }}.{{ aligner }}.bam{% endset %}
{%- set tumor_bam %}temp/{{ pair.gltype }}/alignment/{{ aligner }}/{{ pair.tumor.name }}/{{ pair.tumor.name }}.{{ aligner }}.bam{% endset %}
{%- set temp_dir %}temp/{{ pair.gltype }}/somatic_variant_calls/lancet2/{{ pair.name }}_{{ aligner }}{% endset %}
{%- set results_dir %}{{ pair.gltype }}/somatic_variant_calls/lancet2/{{ pair.name }}_{{ aligner }}{% endset %}
{%- set all_vcf %}{{ results_dir }}/{{ pair.name }}.{{ aligner }}.lancet2.all.vcf.gz{% endset %}
{%- set pass_vcf %}{{ results_dir }}/{{ pair.name }}.{{ aligner }}.lancet2.pass.vcf.gz{% endset %}

- name: lancet2_{{ pair.name }}_{{ aligner }}
  tags: [{{ pair.gltype }}, somatic, snp_indel_caller, lancet2, {{ pair.name }}]
  input:
    - {{ normal_bam }}
    - {{ normal_bam }}.bai
    - {{ tumor_bam }}
    - {{ tumor_bam }}.bai
    - {{ constants.grandcanyon[reference].reference_fasta }}
  output:
    - {{ all_vcf }}
    - {{ all_vcf }}.tbi
  cpus: 8
  mem: 16G
  walltime: "24:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.lancet2.container }}
  cmd: |
    set -eu

    rm -r {{ temp_dir }} || true
    mkdir -p {{ temp_dir }}
    mkdir -p {{ results_dir }}

    Lancet2 pipeline \
      --num-threads 8 \
      --tumor {{ tumor_bam }} \
      --normal {{ normal_bam }} \
      --reference {{ constants.grandcanyon[reference].reference_fasta }} \
      --graphs-dir {{ results_dir }} \
      --out-vcfgz {{ all_vcf }}

- name: lancet2_filter_variants_{{ pair.name }}_{{ aligner }}
  tags: [{{ pair.gltype }}, somatic, snp_indel_caller, lancet2, {{ pair.name }}]
  reset: predecessors
  input:
    - {{ all_vcf }}
    - {{ all_vcf }}.tbi
  output:
    - {{ pass_vcf }}
    - {{ pass_vcf }}.tbi
  cpus: 1
  mem: 2G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.bcftools.container }}
  cmd: |
    set -eu
    set -o pipefail

    bcftools view \
      --include 'FILTER == "PASS"' \
      --output-type z \
      --output {{ pass_vcf }} \
      --write-index \
      {{ all_vcf }}

{% endmacro %}
