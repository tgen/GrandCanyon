{% macro clair3(sample) %}

{%- set bam %}temp/{{ sample.gltype }}/alignment/minimap2/{{ sample.name }}/{{ sample.name }}.minimap2.bam{% endset %}
{%- set temp_dir %}temp/{{ sample.gltype }}/constitutional_variant_calls/clair3/{{ sample.name }}_minimap2{% endset %}
{%- set results_dir %}{{ sample.gltype }}/constitutional_variant_calls/clair3/{{ sample.name }}_minimap2{% endset %}
{%- set all_vcf %}{{ results_dir }}/{{ sample.name }}.minimap2.clair3.all.vcf.gz{% endset %}
{%- set pass_vcf %}{{ results_dir }}/{{ sample.name }}.minimap2.clair3.pass.vcf.gz{% endset %}

- name: clair3_{{ sample.name }}_minimap2
  reset: predecessors
  input:
    - {{ bam }}
    - {{ bam }}.bai
    - {{ constants.grandcanyon[reference].reference_fasta }}
    - {{ constants.grandcanyon.ont_resources }}
  output:
    - {{ all_vcf }}
  cpus: 8
  mem: 32G
  walltime: "24:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.clair3.container }}
  cmd: |
    set -eu
    set -o pipefail

    rm -r {{ temp_dir }} || true
    mkdir -p {{ temp_dir }}
    mkdir -p {{ results_dir }}

    /opt/bin/run_clair3.sh \
      --bam_fn={{ bam }} \
      --ref_fn={{ constants.grandcanyon[reference].reference_fasta }} \
      --threads=8 \
      {% if sample.rgpl == "ONT" %}
      --platform="ont" \
      --model_path="{{ constants.grandcanyon.ont_resources }}/clair3_models/r1041_e82_400bps_sup_v500" \
      {% elif sample.rgpl == "PACBIO" %}
      --platform="hifi" \
      --model_path="/opt/models/hifi_revio" \
      {% else %}
      --platform="ilmn" \
      --model_path="/opt/models/ilmn" \
      {% endif %}
      --output={{ temp_dir }}

    mv {{ temp_dir }}/merge_output.vcf.gz {{ all_vcf }}
    mv {{ temp_dir }}/merge_output.vcf.gz.tbi {{ all_vcf }}.tbi


- name: clair3_filter_variants_{{ sample.name }}_minimap2
  input:
    - {{ all_vcf }}
  output:
    - {{ pass_vcf }}
    - {{ pass_vcf }}.tbi
  cpus: 1
  mem: 4G
  walltime: "4:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.bcftools.container }}
  cmd: |
    set -eu
    set -o pipefail

    bcftools filter \
      --include 'FILTER == "PASS"' \
      --output-type z \
      --output {{ pass_vcf }} \
      --write-index \
      {{ all_vcf }}

{% endmacro %}
