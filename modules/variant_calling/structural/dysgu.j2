{% macro dysgu(sample, aligner) %}

{%- set bam %}temp/{{ sample.gltype }}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam{% endset %}
{%- set temp_dir %}temp/{{ sample.gltype }}/constitutional_variant_calls/dysgu/{{ sample.name }}_{{ aligner }}{% endset %}
{%- set results_dir %}{{ sample.gltype }}/constitutional_variant_calls/dysgu/{{ sample.name }}_{{ aligner }}{% endset %}
{%- set discordant_bam %}{{ temp_dir }}/{{ sample.name }}.{{ aligner }}.discordant.bam{% endset %}
{%- set discordant_cram %}{{ results_dir }}/{{ sample.name }}.{{ aligner }}.discordant.cram{% endset %}
{%- set temp_all_vcf %}{{ temp_dir }}/{{ sample.name }}.{{ aligner }}.dysgu.all.vcf{% endset %}
{%- set temp_pass_vcf %}{{ temp_dir }}/{{ sample.name }}.{{ aligner }}.dysgu.pass.vcf{% endset %}
{%- set all_vcf %}{{ results_dir }}/{{ sample.name }}.{{ aligner }}.dysgu.all.vcf.gz{% endset %}
{%- set pass_vcf %}{{ results_dir }}/{{ sample.name }}.{{ aligner }}.dysgu.pass.vcf.gz{% endset %}

- name: dysgu_fetch_{{ sample.name }}_{{ aligner }}
  input:
    - {{ bam }}
    - {{ bam }}.bai
    - {{ constants.grandcanyon[reference].reference_fasta }}
  output:
    - {{ discordant_bam }}
  cpus: 8
  mem: 32G
  walltime: "8:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.dysgu.container }}
  cmd: |
    set -eu
    set -o pipefail

    rm -r {{ temp_dir }} || true
    mkdir -p {{ temp_dir }}
    mkdir -p {{ results_dir }}

    {# creating calling_intervals on the fly based on reference_dict, this should also accept a user supplied value in the future #}
    grep 'SN:\(chr\)\?[0-9XY]\+\([a-z]\)\?\s' {{ constants.grandcanyon[reference].reference_dict }} |\
      sed 's/SN://;s/LN://' |\
      awk '{ OFS="\t" ; print $2,0,$3-1 }' \
      > {{ temp_dir }}/calling_intervals.bed

    dysgu fetch \
      --reference {{ constants.grandcanyon[reference].reference_fasta }} \
      --output {{ discordant_bam }} \
      --search {{ temp_dir }}/calling_intervals.bed \
      --procs 8 \
      --overwrite \
      {% if sample.rgpl in ('ONT') %}
      --pl 'nanopore' \
      {% elif sample.rgpl in ('PACBIO') %}
      --pl 'pacbio' \
      {% else %}
      --pl 'pe' \
      {% endif %}
      {{ temp_dir }} {{ bam }}


- name: dysgu_call_{{ sample.name }}_{{ aligner }}
  input:
    - {{ bam }}
    - {{ bam }}.bai
    - {{ discordant_bam }}
    - {{ constants.grandcanyon[reference].reference_fasta }}
  output:
    - {{ temp_all_vcf }}
  cpus: 8
  mem: 32G
  walltime: "12:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.dysgu.container }}
  cmd: |
    set -eu
    set -o pipefail

    dysgu call \
      --ibam {{ bam }} \
      --svs-out {{ temp_all_vcf }} \
      --out-format vcf \
      {% if sample.rgpl in ('ONT') %}
      --mode 'nanopore-r10' \
      --pl 'nanopore' \
      {% elif sample.rgpl in ('PACBIO') %}
      --mode 'pacbio-revio' \
      --pl 'pacbio' \
      {% else %}
      --mode 'pe' \
      --pl 'pe' \
      {% endif %}
      --procs 8 \
      --regions {{ temp_dir }}/calling_intervals.bed \
      --regions-only True \
      --regions-mm-only True \
      {{ constants.grandcanyon[reference].reference_fasta }} \
      {{ temp_dir }} \
      {{ discordant_bam }}


- name: dysgu_filter_{{ sample.name }}_{{ aligner }}
  input:
    - {{ temp_all_vcf }}
  output:
    - {{ temp_pass_vcf }}
  cpus: 8
  mem: 32G
  walltime: "8:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.dysgu.container }}
  cmd: |
    set -eu
    set -o pipefail

    dysgu filter \
      --min-prob 0.1 \
      --support-fraction 0.1 \
      --pass-prob 0.3 \
      {{ temp_all_vcf }} \
      > {{ temp_pass_vcf }}


- name: dysgu_samtools_compress_{{ sample.name }}_{{ aligner }}
  input:
    - {{ constants.grandcanyon[reference].reference_fasta }}
    - {{ discordant_bam }}
  output:
    - {{ discordant_cram }}
    - {{ discordant_cram }}.crai
  walltime: "8:00:00"
  cpus: 8
  mem: 8G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.samtools.container }}
  cmd: |
    set -eu
    set -o pipefail

    {# Convert to compressed VCF #}
    samtools view \
      -@ 8 \
      --reference {{ constants.grandcanyon[reference].reference_fasta }} \
      --no-PG \
      -o {{ discordant_cram }} \
      --write-index \
      {{ discordant_bam }}

    rm {{ discordant_bam }}

- name: dysgu_bcftools_compress_{{ sample.name }}_{{ aligner }}
  input:
    - {{ temp_all_vcf }}
    - {{ temp_pass_vcf }}
  output:
    - {{ all_vcf }}
    - {{ all_vcf }}.tbi
    - {{ pass_vcf }}
    - {{ pass_vcf }}.tbi
  cpus: 1
  mem: 4G
  walltime: "4:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.bcftools.container }}
  cmd: |
    set -eu
    set -o pipefail

    bcftools view \
      --output-type z \
      --output-file {{ all_vcf }} \
      --write-index \
      {{ temp_all_vcf }}

    bcftools view \
      --include 'FILTER == "PASS"' \
      --output-type z \
      --output-file {{ pass_vcf }} \
      --write-index \
      {{ temp_pass_vcf }}

{% endmacro %}
