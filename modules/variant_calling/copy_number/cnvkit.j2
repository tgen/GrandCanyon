{%- macro cnvkit(sample_or_pair, aligner) %}

{% if sample_or_pair.normal is defined %}
  {%- set normal_bam %}temp/{{ sample_or_pair.gltype }}/alignment/{{ aligner }}/{{ sample_or_pair.normal.name }}/{{ sample_or_pair.normal.name }}.{{ aligner }}.bam{% endset %}
  {%- set tumor_bam %}temp/{{ sample_or_pair.gltype }}/alignment/{{ aligner }}/{{ sample_or_pair.tumor.name }}/{{ sample_or_pair.tumor.name }}.{{ aligner }}.bam{% endset %}
  {%- set temp_dir %}temp/{{ sample_or_pair.gltype }}/somatic_copy_number/cnvkit/{{ sample_or_pair.name }}_{{ aligner }}{% endset %}
  {%- set results_dir %}{{ sample_or_pair.gltype }}/somatic_copy_number/cnvkit/{{ sample_or_pair.name }}_{{ aligner }}{% endset %}
  {%- set input_config = "paired" %}
{% else %}
  {%- set bam %}temp/{{ sample_or_pair.gltype }}/alignment/{{ aligner }}/{{ sample_or_pair.name }}/{{ sample_or_pair.name }}.{{ aligner }}.bam{% endset %}
  {% if sample_or_pair.subGroup|lower in ('tumor','tumour','case') %}
    {%- set temp_dir %}temp/{{ sample_or_pair.gltype }}/somatic_copy_number/cnvkit/{{ sample_or_pair.name }}_{{ aligner }}{% endset %}
    {%- set results_dir %}{{ sample_or_pair.gltype }}/somatic_copy_number/cnvkit/{{ sample_or_pair.name }}_{{ aligner }}{% endset %}
    {%- set input_config = "tumor_only" %}
  {% else %}
    {%- set temp_dir %}temp/{{ sample_or_pair.gltype }}/constitutional_copy_number/cnvkit/{{ sample_or_pair.name }}_{{ aligner }}{% endset %}
    {%- set results_dir %}{{ sample_or_pair.gltype }}/constitutional_copy_number/cnvkit/{{ sample_or_pair.name }}_{{ aligner }}{% endset %}
    {%- set input_config = "germline" %}
  {% endif %}
{% endif %}

{# Step 1 #}
- name: cnvkit_{{ sample_or_pair.name }}_{{ aligner }}
  tags: [{{ sample_or_pair.gltype }}, somatic, cna_caller, cnvkit, {{ sample_or_pair.name }}]
  input:
    {% if input_config in 'paired' %}
    - {{ normal_bam }}
    - {{ tumor_bam }}
    {% else %}
    - {{ bam }}
    {% endif %}
    - {{ constants.grandcanyon[reference].reference_fasta }}
    - {{ constants.grandcanyon[reference].reference_dict }}
    - {{ constants.grandcanyon[reference].gtf }}
    {% if sample_or_pair.gltype == 'exome' %}
    - {{ sample_or_pair.capture_kit.extended_bed }}
    {% endif %}
  cpus: 8
  mem: 32G
  walltime: "24:00:00"
  queue_preset: "DEFAULT"
  container: quay.io/biocontainers/cnvkit:0.9.12--pyhdfd78af_0
  cmd: |
    set -eu
    set -o pipefail

    {# Make working and temp directories #}
    mkdir -p "{{ temp_dir }}"
    mkdir -p "{{ results_dir }}"

    grep 'SN:\(chr\)\?[0-9XY]\+\([a-z]\)\?\s' {{ constants.grandcanyon[reference].reference_dict }} |\
      sed 's/SN://;s/LN://' |\
      awk '{ OFS="\t" ; print $2,1,$3 }' \
      > {{ temp_dir }}/calling_intervals.bed

    {% if input_config not in 'paired' %}
    cnvkit.py reference \
      {% if sample_or_pair.gltype == 'exome' %}
      --targets {{ sample_or_pair.capture_kit.extended_bed }} \
      {% else %}
      --targets {{ temp_dir }}/calling_intervals.bed \
      {% endif %}
      --output {{ temp_dir }}/{{ sample_or_pair.name }}_reference.cnn \
      --fasta {{ constants.grandcanyon[reference].reference_fasta }}
    {% endif %}

    cnvkit.py batch \
      {% if input_config in 'paired' %}
      {{ tumor_bam }} \
      --normal {{ normal_bam }} \
      --output-reference {{ temp_dir }}/{{ sample_or_pair.name }}_reference.cnn \
      --fasta {{ constants.grandcanyon[reference].reference_fasta }} \
      --annotate {{ constants.grandcanyon[reference].gtf }} \
      {% else %}
      {{ bam }} \
      --reference {{ temp_dir }}/{{ sample_or_pair.name }}_reference.cnn \
      {% endif %}
      -p 8 \
      {% if sample_or_pair.gltype == 'exome' %}
      --method hybrid \
      --targets {{ sample_or_pair.capture_kit.extended_bed }} \
      {% else %}
      --method wgs \
      {% endif %}
      --output-dir {{ results_dir }} \
      --scatter

{% endmacro %}
