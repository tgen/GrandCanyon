{% from 'modules/assembly/assembly_stats.j2' import assembly_stats with context %}
{% from 'modules/assembly/quast.j2' import quast with context %}

{% from 'modules/assembly/minimap2.j2' import minimap2_asm with context %}
{% from 'modules/assembly/mashmap.j2' import mashmap with context %}

{% from 'modules/assembly/plotting.j2' import moddotplot with context %}

{% macro hifiasm(input) %}

{%- set temp_dir %}temp/{{ input.gltype }}/assembly/hifiasm/{{ input.project }}{% endset %}
{%- set results_dir %}{{ input.gltype }}/assembly/hifiasm/{{ input.project }}{% endset %}

{% set hifi_list = input.hifi + input.corr + input.hifi %}

{% if hifi_list | length > 0 %}
- name: hifiasm_{{ input.project }}
  input:
    {% for hififq in hifi_list %}
    - {{ hififq }}
    {% endfor %}
  output: {{ results_dir }}/{{ input.project }}.asm.bp.hap1.p_ctg.fa
  cpus: 32
  mem: 600G
  walltime: "48:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.hifiasm.container }}
  cmd: |
    set -eu
    set -o pipefail

    rm -r {{ temp_dir }} || true
    mkdir -p {{ temp_dir }}
    mkdir -p {{ results_dir }}

    hifiasm \
      -t 32 \
      -o {{ temp_dir }}/{{ input.project }}.asm \
      --telo-m CCCTAA \
      {% if input.ulong | length > 0 %}
      --ul "{{ input.ulong | join(',') }}" \
      --ul-cut 10000 \
      {% endif %}
      {% if input.hic_r1 | length > 0 %}
      --h1 "{{ input.hic_r1 | sort | join(',') }}" \
      --h2 "{{ input.hic_r2 | sort | join(',') }}" \
      {% endif %}
      {{ hifi_list | join(' ') }}

    for graph in {{ temp_dir }}/{{ input.project }}.asm.*.gfa ; do
      awk '/^S/{print ">"$2;print $3}' ${graph} > {{ results_dir }}/$(basename ${graph%.gfa}.fa)
    done

{% set input_assembly %}{{ results_dir }}/{{ input.project }}.asm.bp.hap1.p_ctg.fa{% endset %}
{{- assembly_stats(input, input_assembly, 'hifiasm') }}
{{- quast(input, input_assembly, 'hifiasm') }}

{% if tasks.assembly_align_minimap2 | default(true) %}
{{- minimap2_asm(input, input_assembly, 'hifiasm') }}
{% endif %}
{% if tasks.assembly_align_mashmap | default(false) %}
{{- mashmap(input, input_assembly, 'hifiasm') }}
{% endif %}
{% if tasks.assembly_moddotplot | default(false) %}
{{- moddotplot(input, input_assembly, 'hifiasm') }}
{% endif %}

{% else %}
  {% set log_msg %}hifiasm was enabled, but no pacbio data was found. Hifiasm requires pacbio input data, so this task was skipped{% endset %}
  {{ log(log_msg, level='WARNING') }}
{% endif %}
{% endmacro %}
