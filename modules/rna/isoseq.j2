{% from 'modules/rna/pigeon.j2' import pigeon with context %}
{% from 'modules/rna/sqanti3.j2' import sqanti3 with context %}

{% macro isoseq(sample) %}

{% set temp_dir %}temp/{{ sample.gltype }}/isoforms/isoseq/{{ sample.name }}{% endset %}
{% set results_dir %}{{ sample.gltype }}/isoforms/isoseq/{{ sample.name }}{% endset %}

{% set longfqlist = [] %}

{% for rgid, rg in sample.read_groups.items() %}
  {% set longfastq = rg.data_files|selectattr('fastqCode', 'eq', 'hifi')|first %}
  {% if longfastq is defined %}
    {% set longfastq_path %}temp/ubams/{{ longfastq.basename }}{% endset %}
    {% do longfastq.update({"path": longfastq_path}) %}
    {% do longfqlist.append(longfastq) %}
  {% endif %}
{% endfor %}

{% if longfqlist | length > 0 %}

- name: isoseq_cluster_{{ sample.name }}
  input:
    - {{ constants.grandcanyon[reference].reference_fasta }}
    {% for file in longfqlist %}
    - {{ file.path }}
    {% endfor %}
  output:
    - {{ temp_dir }}/{{ sample.name }}.clustered.bam
  cpus: 20
  mem: 80G
  walltime: "4:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.isoseq.container }}
  cmd: |

    rm -rf {{ temp_dir }}
    mkdir -p {{ temp_dir }}

    ROOT_DIR=${PWD}

    ls $ROOT_DIR/{{ longfqlist|map(attribute='path')|join(' $ROOT_DIR/') }} > {{ temp_dir }}/{{ sample.name }}.fofn
    cd {{ temp_dir }} && \
    isoseq cluster2 \
      --use-qvs \
      --num-threads 20 \
      {{ sample.name }}.fofn \
      {{ sample.name }}.clustered.bam

- name: isoseq_pbmm2_{{ sample.name }}
  input:
    - {{ constants.grandcanyon[reference].reference_fasta }}
    - {{ temp_dir }}/{{ sample.name }}.clustered.bam
  output:
    - {{ results_dir }}/{{ sample.name }}.pbmm2.bam
  cpus: 20
  mem: 80G
  walltime: "4:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.pbmm2.container }}
  cmd: |

    pbmm2 align \
      --preset ISOSEQ \
      --sort \
      --num-threads 20 \
      {{ temp_dir }}/{{ sample.name }}.clustered.bam \
      {{ constants.grandcanyon[reference].reference_fasta }} \
      {{ results_dir }}/{{ sample.name }}.pbmm2.bam

- name: isoseq_collapse_{{ sample.name }}
  input:
    - {{ results_dir }}/{{ sample.name }}.pbmm2.bam
    - {{ temp_dir }}/{{ sample.name }}.clustered.bam
  output:
    - {{ results_dir }}/{{ sample.name }}.collapsed.gff
    - {{ results_dir }}/{{ sample.name }}.collapsed.flnc_count.txt
  cpus: 4
  mem: 16G
  walltime: "4:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.isoseq.container }}
  cmd: |

    {# isoseq collapse supports reading in the flnc bam, but it complains about missing a pbi index #}
    {# and this is missing because we cannot reindex the u.bam after addreplacerg insertion of rgid #}
    isoseq collapse \
      --num-threads 4 \
      --do-not-collapse-extra-5exons \
      {{ results_dir }}/{{ sample.name }}.pbmm2.bam \
      {{ temp_dir }}/{{ sample.name }}.fofn \
      {{ results_dir }}/{{ sample.name }}.collapsed.gff

{{- pigeon(sample) }}
{{- sqanti3(sample) }}

{% endif %}

{% endmacro %}
