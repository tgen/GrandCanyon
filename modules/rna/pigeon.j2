{% macro pigeon(sample) %}

{% set temp_dir %}temp/{{ sample.gltype }}/isoforms/pigeon/{{ sample.name }}{% endset %}
{% set results_dir %}{{ sample.gltype }}/isoforms/pigeon/{{ sample.name }}{% endset %}
{% set isoseq_dir %}{{ sample.gltype }}/isoforms/isoseq/{{ sample.name }}{% endset %}

{% set longfqlist = [] %}

{% for rgid, rg in sample.read_groups.items() %}
  {% set longfastq = rg.data_files|selectattr('fastqCode', 'eq', 'hifi')|first %}
  {% if longfastq is defined %}
    {% set longfastq_path %}temp/ubams/{{ longfastq.basename }}{% endset %}
    {% do longfastq.update({"path": longfastq_path}) %}
    {% do longfqlist.append(longfastq) %}
  {% endif %}
{% endfor %}

{% if longfqlist | length > 0 %}

- name: pigeon_{{ sample.name }}
  input:
    - {{ isoseq_dir }}/{{ sample.name }}.collapsed.gff
    - {{ constants.grandcanyon[reference].reference_fasta }}
    - {{ constants.grandcanyon[reference].gtf }}
  output:
    - {{ results_dir }}/{{ sample.name }}.collapsed.sorted.gff
    - {{ results_dir }}/{{ sample.name }}.collapsed_classification.txt
  cpus: 4
  mem: 16G
  walltime: "4:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.pbpigeon.container }}
  cmd: |
    set -e

    mkdir -p {{ temp_dir }}
    mkdir -p {{ results_dir }}

    pigeon prepare {{ isoseq_dir }}/{{ sample.name }}.collapsed.gff

    pigeon classify \
      --num-threads 4 \
      --out-dir {{ results_dir }} \
      --fl {{ isoseq_dir }}/{{ sample.name }}.collapsed.flnc_count.txt \
      {{ isoseq_dir }}/{{ sample.name }}.collapsed.sorted.gff \
      {{ constants.grandcanyon[reference].gtf }} \
      {{ constants.grandcanyon[reference].reference_fasta }}

    pigeon filter \
      --num-threads 4 \
      --isoforms {{ isoseq_dir }}/{{ sample.name }}.collapsed.sorted.gff \
      {{ results_dir }}/{{ sample.name }}_classification.txt \

    pigeon report \
      --num-threads 4 \
      {{ results_dir }}/{{ sample.name }}_classification.filtered_lite_classification.txt \
      {{ results_dir }}/{{ sample.name }}_classification.filtered_lite_classification.saturation.txt

{% endif %}

{% endmacro %}
