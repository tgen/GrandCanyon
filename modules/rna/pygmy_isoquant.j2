{% macro pygmy_isoquant(temp_dir, result_dir, sample, sample_bam, reference_fasta, gtf, SIRV=false) %}

{% if SIRV %}
  {% set results_dir %}{{ sample.gltype }}/quant/isoquant_SIRV{% endset %}
{% else %}
  {% set results_dir %}{{ sample.gltype }}/quant/isoquant{% endset %}
{% endif %}

{% if SIRV %}
- name: isoquant_SIRV_{{ sample.name }}
{% else %}
- name: isoquant_{{ sample.name }}
{% endif %}
  input:
    - {{ sample_bam }}
    - {{ gtf }}
    - {{ reference_fasta }}
  output: {{ results_dir }}/{{ sample.name }}
  cpus: 10
  mem: 32G
  walltime: "4:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.isoquant.container }}
  cmd: |

    {# note: this step performs isoquant for read correction, annotation, and quantification #}
    {# input: human aligned genome bam #}
    {# output: gene and transcript quantification, gtf #}

    mkdir {{ results_dir }}

    isoquant.py \
      --reference {{ reference_fasta }} \
      -o {{ results_dir }}/ \
      -g {{ gtf }} \
      -d nanopore \
      --complete_genedb \
      --bam {{ sample_bam }} \
      --labels {{ sample.name }} \
      -p {{ sample.name }} \
      --sqanti_output \
      --check_canonical \
      -t 10

{% endmacro %}

