{% macro sqanti3(sample) %}

{% set temp_dir %}temp/{{ sample.gltype }}/isoforms/sqanti3/{{ sample.name }}{% endset %}
{% set results_dir %}{{ sample.gltype }}/isoforms/sqanti3/{{ sample.name }}{% endset %}
{% set isoseq_dir %}{{ sample.gltype }}/isoforms/isoseq/{{ sample.name }}{% endset %}

{% set longfqlist = [] %}
{% set shortfqlist = [] %}

{# TODO: Need to sort out a technique to select the best set of short read data, or decide whether or not all of it should likely be used. #}
{% for rgid, data_files in dataFiles|selectattr('rgsm', 'eq', sample.rgsm)|selectattr('glType', 'eq', 'RNA')|selectattr('rgpl', 'eq', 'ILLUMINA')|selectattr('rgpm', 'eq', 'NOVASEQXPLUS')|groupby('rgid') %}
  {% set rg = data_files %}
  {% set r1fastq = rg|selectattr('fastqCode', 'eq', 'R1')|first %}
  {% set r2fastq = rg|selectattr('fastqCode', 'eq', 'R2')|first %}
  {% if r1fastq is defined and r2fastq is defined %}
    {% set sr_pair = {"r1path": r1fastq.path, "r2path": r2fastq.path} %}
    {% do shortfqlist.append(sr_pair) %}
  {% endif %}
{% endfor %}

{% for rgid, rg in sample.read_groups.items() %}
  {% set longfastq = rg.data_files|selectattr('fastqCode', 'eq', 'hifi')|first %}
  {% if longfastq is defined %}
    {% set longfastq_path %}temp/ubams/{{ longfastq.basename }}{% endset %}
    {% do longfastq.update({"path": longfastq_path}) %}
    {% do longfqlist.append(longfastq) %}
  {% endif %}
{% endfor %}

{% if longfqlist | length > 0 %}

- name: sqanti3_{{ sample.name }}
  input:
    - {{ isoseq_dir }}/{{ sample.name }}.collapsed.gff
    - {{ isoseq_dir }}/{{ sample.name }}.collapsed.abundance.txt
    - {{ constants.grandcanyon[reference].reference_fasta }}
    - {{ constants.grandcanyon[reference].gtf }}
    - {{ constants.grandcanyon[reference].tool_resources.sqanti3.tappas_gff }}
  output:
    - {{ results_dir }}/{{ sample.name }}.collapsed.sorted.gff
    - {{ results_dir }}/{{ sample.name }}.collapsed_classification.txt
  cpus: 20
  mem: 64G
  walltime: "12:00:00"
  queue_preset: "DEFAULT"
  container: {{ constants.tools.sqanti3.container }}
  cmd: |
    set -e

    rm -r {{ temp_dir }} || true
    mkdir -p {{ temp_dir }}
    mkdir -p {{ results_dir }}

    {% if shortfqlist | length > 0 %}
    cat <<EOF > "{{ temp_dir }}/{{ sample.name }}_short_reads.fofn"
    {% for pair in shortfqlist %}
    {{ pair.r1path }} {{ pair.r2path }}
    {% endfor %}
    EOF
    {% endif %}

    sqanti3_qc.py \
      {{ isoseq_dir }}/{{ sample.name }}.collapsed.gff \
      {{ constants.grandcanyon[reference].gtf }} \
      {{ constants.grandcanyon[reference].reference_fasta }} \
      --CAGE_peak /opt2/sqanti3/5.2.1/SQANTI3-5.2.1/data/ref_TSS_annotation/human.refTSS_v3.1.hg38.bed \
      --polyA_motif_list /opt2/sqanti3/5.2.1/SQANTI3-5.2.1/data/polyA_motifs/mouse_and_human.polyA_motif.txt \
      --gff3 {{ constants.grandcanyon[reference].tool_resources.sqanti3.tappas_gff }} \
      --isoAnnotLite \
      -o {{ sample.name }} \
      -d {{ temp_dir }} \
      -fl {{ isoseq_dir }}/{{ sample.name }}.collapsed.abundance.txt \
    {% if shortfqlist | length > 0 %}
      --short_reads {{ temp_dir }}/{{ sample.name }}_short_reads.fofn \
    {% endif %}
      --cpus 20 \
      --report both

    mv {{ temp_dir }}/{{ sample.name }}* {{ results_dir }}

    sqanti3_filter.py rules \
      {{ results_dir }}/{{ sample.name }}_classification.txt \
      -o {{ sample.name }} \
      -d {{ results_dir }} \
      --skip_report

    {% if shortfqlist | length > 0 %}
    cat <<EOF > {{ results_dir }}/{{ sample.name }}_rules_filter.json
    {
      "full-splice_match": [
          {
              "perc_A_downstream_TTS":[0,59]
          }
      ],
      "incomplete-splice_match":[
          {
              "length":[2001,14999],
              "subcategory": ["3prime_fragment", "5prime_fragment", "internal_fragment"]
          }
      ],
      "novel_in_catalog":[
          {
              "all_canonical": "canonical"
          },
          {
              "min_cov": 10
          }
      ],
      "novel_not_in_catalog":[
          {
              "all_canonical": "canonical",
              "diff_to_gene_TSS":[-50,50],
              "diff_to_gene_TTS": [-50,50]
          },
          {
              "min_cov": 10,
              "diff_to_gene_TSS":[-50,50],
              "diff_to_gene_TTS": [-50,50]
          }
      ],
      "rest": [
          {
              "RTS_stage":"FALSE",
              "all_canonical":"canonical",
              "coding": "coding",
              "perc_A_downstream_TTS":[0,59],
              "exons": 2
          }
       ]
    }
    EOF

    sqanti3_filter.py rules \
      {{ results_dir }}/{{ sample.name }}_classification.txt \
      -o {{ sample.name }}_strict_filter \
      -d {{ results_dir }} \
      --json_filter {{ results_dir }}/{{ sample.name }}_rules_filter.json \
      --skip_report
    {% endif %}

{% endif %}

{% endmacro %}
