{# Tasks contains switches for toggling many of the features #}
{% if tasks is not defined %}
    {% set tasks = {} %}
{% endif %}

{% from 'utilities/copy_fastq.j2' import copy_fastq with context %}
{% from 'utilities/copy_ubam.j2' import copy_ubam with context %}
{% from 'utilities/copy_bam.j2' import copy_bam with context %}
{% from 'modules/dna_alignment/main.j2' import dna_alignment with context %}
{% from 'modules/rna/main.j2' import rna_alignment with context %}
{# {% from 'utilities/check_bam_rg_tags.j2' %} #}

{% set samples = {} %}

{% for file in dataFiles %}
    {% set bn = file.path | basename %}
    {% set name = file.sampleName %}

    {% do file.update({'name': name}) %}
    {% do file.update({'basename': bn}) %}
    {% do file.update({'gltype': file.glType.lower()}) %}
    {% do file.update({'glprep': file.glPrep.lower()}) %}

    {% if 'subGroup' not in file %}
        {% do file.update({'subGroup': 'constitutional'}) %}
    {% endif %}

    {% if name not in samples %}
        {% do samples.update({name: {}}) %}
        {% do samples[name].update(file) %}
        {% do samples[name].update({"name": name}) %}
    {% endif %}

    {% if file.fileType == "bam" %}
      {{ check_bam_rg_tags(file) }}
    {% endif %}
{% endfor %}

{% for rgid, data_files in dataFiles | groupby('rgid') %}
    {% set rg = data_files|first %}
    {% set name = rg.sampleName %}

    {% if not 'read_groups' in samples[name] %}
        {% do samples[name].update({'read_groups': {}}) %}
    {% endif %}

    {% set fastq_files = data_files|selectattr('fileType', 'eq', 'fastq') %}
    {% set ubam_files = data_files|selectattr('fileType', 'eq', 'ubam') %}
    {% set bam_files = data_files|selectattr('fileType', 'eq', 'bam') %}

    {% do samples[name]['read_groups'].update({rgid: {}}) %}
    {% do samples[name]['read_groups'][rgid].update(rg) %}
    {% do samples[name]['read_groups'][rgid].update({'fastq_files': fastq_files}) %}
    {% do samples[name]['read_groups'][rgid].update({'ubam_files': ubam_files}) %}
    {% do samples[name]['read_groups'][rgid].update({'bam_files': bam_files}) %}
{% endfor %}

{# Copy fastqs to project dir #}
{% for file in dataFiles %}
  {% if file.fileType == "fastq" %}
    {{- copy_fastq(file) }}
  {% elif file.fileType == "ubam" %}
    {{- copy_ubam(file) }}
  {% elif file.fileType == "bam" %}
    {{- copy_bam(file) }}
  {% endif %}
{% endfor %}

{# Start of module calls #}
{{- dna_alignment(samples) }}

{{- rna_alignment(samples) }}

{#
{{- constitutional_variant_calling(samples) }}

{{- rna_quant_and_fusion_detection(samples) }}
#}
